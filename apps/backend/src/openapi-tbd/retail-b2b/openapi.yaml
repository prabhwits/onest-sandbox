openapi: 3.0.3
info:
  title: ONDC ONEST Mock Implemention
  description: >-
    This is a Mock Server for integrating with ONDC. Currently, it supports B2B.
    An easy way to get started would be to ask yourself the two question -
    _"which network participant am I going to send to?"_ and _"what would be the
    action/on_action I am going to send?"_. With these you can easily construct
    the URL you need to mock and then find that among this list. <br />
  contact:
    email: team@ondc.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about ONDC
  url: https://ondc.org
servers:
  - url: /api/b2b/bpp
  - url: /api/b2b/bap
tags:
  - name: B2B
    description: Everything for B2B domain
    externalDocs:
      description: Find out more
      url: >-
        https://github.com/ONDC-Official/ONDC-RET-Specifications/tree/release-2.0.2
  - name: Auth
    description: Endpoints for Authentication
paths:
  /auth/signCheck:
    post:
      tags:
        - Auth
      summary: Check the validity of a authorization token
      # parameters:
      #   - name: authorization
      #     in: header
      #     description: Signed Authorization Header
      #     required: true
      #     type: string
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Request Body should contain the log which is signed.
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Request Body should contain the log which is signed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_check_response'
           
  /search:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock search request to BPP
      requestBody:
        description: Search Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Search.yaml
            examples:
              search_by_categoy:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/search/search_by_category.yaml#/value
              search_by_fulfillment_end_loc:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/search/search_by_fulfillment_end_loc.yaml#/value
              search_by_item:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/search/search_by_item.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /select:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in    
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - self-pickup
              - exports
              - non-serviceable
              - quantity-unavailable
              - prepaid-bap-non-rfq
              - prepaid-bap
      tags:
        - B2B
      summary: Mock select request to BPP
      requestBody:
        description: Select Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Select.yaml
            examples:
              select_BAP_chat:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/select/select_BAP_chat.yaml#/value
              select_domestic_SelfPickup:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/select/select_domestic_SelfPickup.yaml#/value
              select_domestic:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/select/select_domestic.yaml#/value
              select_domestic(Non RFQ):
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/select/select_domestic(Non RFQ).yaml#/value
              select_exports:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/select/select_exports.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /init:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - payment-bpp-non-rfq
              - self-pickup
              - exports
              - reject-rfq
          
      tags:
        - B2B
      summary: Mock init request to BPP
      requestBody:
        description: Init Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Init.yaml
            examples:
              init_domestic_BPP_payment:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/init/init_domestic_BPP_payment.yaml#/value
              init_domestic_non_rfq:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/init/init_domestic_non_rfq.yaml#/value
              init_domestic:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/init/init_domestic.yaml#/value
              init_exports:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/init/init_exports.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /confirm:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - exports
              - rejected
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock confirm request to BPP
      requestBody:
        description: confirm Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Confirm.yaml
            examples:
              confirm_domestic_Non_RFQ:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/confirm/confirm_domestic_Non_RFQ.yaml#/value
              confirm_domestic:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/confirm/confirm_domestic.yaml#/value
              confirm_exports:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/confirm/confirm_exports.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /update:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - fulfillment
              - prepaid
              - prepaid-bap
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock update request to BPP
      requestBody:
        description: update Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Update.yaml
            examples:
              update_prepaid:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/update/update_prepaid.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml 
  /status:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - delivered
              - out-for-delivery
              - picked-up
              - proforma-invoice
              - bpp-payment-error
              - bpp-payment
              - self-picked-up
      tags:
        - B2B
      summary: Mock status request to BPP
      requestBody:
        description: status Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Status.yaml
            examples:
              status:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/status/status.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_search:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - self-pickup
              - exports
              - bap-chat
      tags:
        - B2B
      summary: Mock on search request to BAP
      requestBody:
        description: On Search Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/OnSearch.yaml
            examples:
              on_search_autoparts_and_components:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_autoparts_and_components.yaml#/value
              on_search_bpc:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_bpc.yaml#/value
              on_search_chemicals:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_chemicals.yaml#/value
              on_search_construction_and_building:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_construction_and_building.yaml#/value
              on_search_electronics_mobile:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_electronics_mobile.yaml#/value
              on_search_electronics:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_electronics.yaml#/value
              on_search_fashion:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_fashion.yaml#/value
              on_search_grocery:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_grocery.yaml#/value
              on_search_hardware_and_industrial:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_hardware_and_industrial.yaml#/value
              on_search_payment_BPP:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search_payment_BPP.yaml#/value
              on_search:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_search/on_search.yaml#/value
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_init:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - exports
              - prepaid-bap-non-rfq
              - prepaid-bap-rfq
      tags:
        - B2B
      summary: Mock on init request to BAP
      requestBody:
        description: On Init Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/OnInit.yaml
            examples:
              on_init_domestic_non_rfq:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_init/on_init_domestic_non_rfq.yaml#/value
              on_init_domestic_payment_BPP_Non_RFQ:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_init/on_init_domestic_payment_BPP_Non_RFQ.yaml#/value
              on_init_domestic_self_pickup:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_init/on_init_domestic_self_pickup.yaml#/value
              on_init_domestic:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_init/on_init_domestic.yaml#/value
              on_init_exports:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_init/on_init_exports.yaml#/value
              on_init_rejectRFQ:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_init/on_init_rejectRFQ.yaml#/value
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_select:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - exports
              - bpp-payment
      tags:
        - B2B
      summary: Mock on select request to BAP
      requestBody:
        description: On Select Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/OnSelect.yaml
            examples:
              on_select_domestic_non_rfq:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_select/on_select_domestic_non_rfq.yaml#/value
              on_select_domestic_self_pickup:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_select/on_select_domestic_self_pickup.yaml#/value
              on_select_domestic:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_select/on_select_domestic.yaml#/value
              on_select_exports:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_select/on_select_exports.yaml#/value
              on_select_non_serviceable:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_select/on_select_non_serviceable.yaml#/value
              on_select_quantity_unavailable:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_select/on_select_quantity_unavailable.yaml#/value
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_confirm:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on confirm request to BAP
      requestBody:
        description: On Confirm Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/OnConfirm.yaml
            examples:
              on_confirm_domestic_non_rfq:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_confirm/on_confirm_domestic_non_rfq.yaml#/value
              on_confirm_domestic_Rejected:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_confirm/on_confirm_domestic_Rejected.yaml#/value
              on_confirm_domestic:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_confirm/on_confirm_domestic.yaml#/value
              on_confirm_exports:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_confirm/on_confirm_exports.yaml#/value
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_update:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on update request to BAP
      requestBody:
        description: On Update Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/OnUpdate.yaml
            examples:
              on_update_fulfillments:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_update/on_update_fulfillments.yaml#/value
              on_update_prepaid_BAP:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_update/on_update_prepaid_BAP.yaml#/value
              on_update_prepaid:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_update/on_update_prepaid.yaml#/value
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_status:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on status request to BAP
      requestBody:
        description: On Status Request Log
        content:
          application/json:
            schema:
              $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/OnStatus.yaml
            examples:
              on_status_BPP_payment_error:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_status/on_status_BPP_payment_error.yaml#/value
              on_status_BPP_payment:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_status/on_status_BPP_payment.yaml#/value
              on_status_delivered:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_status/on_status_delivered.yaml#/value
              on_status_out_for_delivery:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_status/on_status_out_for_delivery.yaml#/value
              on_status_picked_up:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_status/on_status_picked_up.yaml#/value
              on_status_proforma_invoice:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_status/on_status_proforma_invoice.yaml#/value
              on_status_self_picked_up:
                value:
                  $ref: ../../../b2b_mock_server/apps/backend/domain-repos/@retail-b2b/draft-2.x/api/components/Examples/B2B/on_status/on_status_self_picked_up.yaml#/value
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../b2b_mock_server/apps/backend/beckn-core/api/transaction/components/io/Response.yaml
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: authorization  # name of the header, query parameter or cookie
  schemas:
    auth_check_response:
      type: object
      properties:
        message:
          type: string
          example: "Valid Signature"

security:
  - ApiKeyAuth: [] 